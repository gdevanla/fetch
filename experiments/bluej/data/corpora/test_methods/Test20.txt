 bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getSimpleName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getArrayOf Ljava/lang/String; rname Ljava/lang/ClassLoader; cloader Ljava/lang/Class; arrClass Ljava/lang/ClassNotFoundException; cnfe Lbluej/utility/JavaReflective; this Ljava/lang/String; rname Ljava/lang/Class<*>; arrClass bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getSimpleName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getDeclaredMethods Ljava/lang/ClassNotFoundException; cnfe Lbluej/debugger/gentype/JavaType; paramType [Lbluej/debugger/gentype/JavaType; arr$ I len$ I i$ [Lbluej/debugger/gentype/JavaType; paramTypes Ljava/util/List; paramTypesList Ljava/lang/String; name Lbluej/debugger/gentype/MethodReflective; mr Ljava/util/Set; rset Ljava/lang/ClassNotFoundException; cnfe Lbluej/debugger/gentype/JavaType; rtype Ljava/util/List; tpars Ljava/util/Map; tparMap Ljava/lang/reflect/Method; method [Ljava/lang/reflect/Method; arr$ I len$ I i$ [Ljava/lang/reflect/Method; methods Ljava/util/Map; rmap Ljava/lang/LinkageError; le Lbluej/utility/JavaReflective; this Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypesList Ljava/util/Set<Lbluej/debugger/gentype/MethodReflective;>; rset Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/Map<Ljava/lang/String;Ljava/util/Set<Lbluej/debugger/gentype/MethodReflective;>;>; rmap java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c java.lang.Object bluej.debugger.gentype.GenTypeParameter <clinit> bluej.debugger.gentype.GenTypeParameter bluej.debugger.gentype.JavaType <clinit> bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType <clinit> bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType JavaPrimitiveType Lbluej/debugger/gentype/JavaPrimitiveType; this I index java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getReturnType Ljava/lang/reflect/Type; rt Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getVoid bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getType I v java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTparMapping Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/util/Map; tparMap Lbluej/utility/JavaUtils; ju Ljava/util/List; tpars Ljava/lang/reflect/Method; m Ljava/lang/reflect/Constructor; cc Ljava/lang/Class<*>; c Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparMap Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/lang/reflect/Constructor<*>; cc java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective storeTparMappings Lbluej/debugger/gentype/GenTypeDeclTpar; tpar Ljava/util/Iterator; i$ Lbluej/utility/JavaReflective; this Ljava/util/List; tpars Ljava/util/Map; map Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tpars Ljava/util/Map<Ljava/lang/String;-Lbluej/debugger/gentype/GenTypeDeclTpar;>; map java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getParamGenTypes [Ljava/lang/reflect/Type; params I i [Ljava/lang/reflect/Type; params [Lbluej/debugger/gentype/JavaType; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method Z raw bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; x0 bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType mapTparsToTypes Lbluej/debugger/gentype/JavaPrimitiveType; this Ljava/util/Map; tparams Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tparams bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this bluej.debugger.gentype.JavaType bluej.debugger.gentype.JavaPrimitiveType getUpperBound Lbluej/debugger/gentype/JavaPrimitiveType; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 isVarArgs Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Method; method java.lang.Object bluej.debugger.gentype.MethodReflective MethodReflective Lbluej/debugger/gentype/MethodReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; returnType Ljava/util/List; tparTypes Ljava/util/List; paramTypes Lbluej/debugger/gentype/Reflective; declaringType Z isVarArgs I modifiers Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; tparTypes Ljava/util/List<Lbluej/debugger/gentype/JavaType;>; paramTypes java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this java.lang.Object bluej.debugger.gentype.MethodReflective getName Lbluej/debugger/gentype/MethodReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getDeclaredFields Lbluej/debugger/gentype/JavaType; fieldType Lbluej/debugger/gentype/FieldReflective; fref Ljava/lang/ClassNotFoundException; cnfe I i [Ljava/lang/reflect/Field; fields Ljava/util/Map; rmap Ljava/lang/LinkageError; le Lbluej/utility/JavaReflective; this Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/FieldReflective;>; rmap java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getFieldType Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Field; field bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.GenTypeSolid bluej.debugger.gentype.GenTypeClass GenTypeClass Lbluej/debugger/gentype/GenTypeClass; this Lbluej/debugger/gentype/Reflective; r java.lang.Object bluej.debugger.gentype.FieldReflective FieldReflective Lbluej/debugger/gentype/FieldReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; type I modifiers java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getFieldType Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Field; field bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.GenTypeSolid bluej.debugger.gentype.GenTypeClass GenTypeClass Lbluej/debugger/gentype/GenTypeClass; this Lbluej/debugger/gentype/Reflective; r java.lang.Object bluej.debugger.gentype.FieldReflective FieldReflective Lbluej/debugger/gentype/FieldReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; type I modifiers java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getFieldType Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Field; field bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.GenTypeSolid bluej.debugger.gentype.GenTypeClass GenTypeClass Lbluej/debugger/gentype/GenTypeClass; this Lbluej/debugger/gentype/Reflective; r java.lang.Object bluej.debugger.gentype.FieldReflective FieldReflective Lbluej/debugger/gentype/FieldReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; type I modifiers java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getFieldType Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/Field; field bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.GenTypeSolid bluej.debugger.gentype.GenTypeClass GenTypeClass Lbluej/debugger/gentype/GenTypeClass; this Lbluej/debugger/gentype/Reflective; r java.lang.Object bluej.debugger.gentype.FieldReflective FieldReflective Lbluej/debugger/gentype/FieldReflective; this Ljava/lang/String; name Lbluej/debugger/gentype/JavaType; type I modifiers java.lang.Object bluej.debugger.gentype.FieldReflective getName Lbluej/debugger/gentype/FieldReflective; this java.lang.Object bluej.debugger.gentype.FieldReflective getName Lbluej/debugger/gentype/FieldReflective; this java.lang.Object bluej.debugger.gentype.FieldReflective getName Lbluej/debugger/gentype/FieldReflective; this java.lang.Object bluej.debugger.gentype.FieldReflective getName Lbluej/debugger/gentype/FieldReflective; this java.lang.Object bluej.debugger.gentype.FieldReflective getType Lbluej/debugger/gentype/FieldReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getArrayOf Ljava/lang/String; rname Ljava/lang/ClassLoader; cloader Ljava/lang/Class; arrClass Ljava/lang/ClassNotFoundException; cnfe Lbluej/utility/JavaReflective; this Ljava/lang/String; rname Ljava/lang/Class<*>; arrClass bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective isInterface Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective isStatic Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective isPublic Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getTypeParams Lbluej/utility/JavaReflective; this java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 getTypeParams Ljava/lang/reflect/TypeVariable; tvar [Ljava/lang/reflect/TypeVariable; arr$ I len$ I i$ I j [Ljava/lang/reflect/Type; bounds [Lbluej/debugger/gentype/GenTypeSolid; upperBounds Lbluej/debugger/gentype/GenTypeDeclTpar; tpar I i Lbluej/utility/JavaUtils15; this Ljava/lang/reflect/GenericDeclaration; decl Ljava/util/List; rlist [Ljava/lang/reflect/TypeVariable; tvars Ljava/util/Map; tvarMap Ljava/lang/reflect/TypeVariable<*>; tvar Ljava/util/List<Lbluej/debugger/gentype/GenTypeDeclTpar;>; rlist [Ljava/lang/reflect/TypeVariable<*>; tvars Ljava/util/Map<Ljava/lang/String;Lbluej/debugger/gentype/GenTypeDeclTpar;>; tvarMap bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getRelativeClass Ljava/lang/ClassLoader; cloader Ljava/lang/Class; cr Ljava/lang/ClassNotFoundException; cnfe Lbluej/utility/JavaReflective; this Ljava/lang/String; name Ljava/lang/Class<*>; cr bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getSimpleName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getOuterClass Lbluej/utility/JavaReflective; this Ljava/lang/Class; declaring Ljava/lang/Class<*>; declaring bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getInners Ljava/lang/Class; inner [Ljava/lang/Class; arr$ I len$ I i$ Lbluej/utility/JavaReflective; this [Ljava/lang/Class; inners Ljava/util/List; innersR Ljava/lang/Class<*>; inner [Ljava/lang/Class<*>; inners Ljava/util/List<Lbluej/debugger/gentype/Reflective;>; innersR bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getUnderlyingClass Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getRelativeClass Ljava/lang/ClassLoader; cloader Ljava/lang/Class; cr Ljava/lang/ClassNotFoundException; cnfe Lbluej/utility/JavaReflective; this Ljava/lang/String; name Ljava/lang/Class<*>; cr bluej.debugger.gentype.Reflective bluej.utility.JavaReflective isAssignableFrom Lbluej/utility/JavaReflective; this Lbluej/debugger/gentype/Reflective; r bluej.debugger.gentype.Reflective bluej.utility.JavaReflective isAssignableFrom Lbluej/utility/JavaReflective; this Lbluej/debugger/gentype/Reflective; r bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getUnderlyingClass Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getSuperTypes Lbluej/debugger/gentype/GenTypeClass; componentSuperType Ljava/lang/Class; ct Lbluej/utility/JavaReflective; ctR Ljava/util/List; componentSuperTypes Ljava/util/Iterator; i Ljava/lang/ClassNotFoundException; cnfe I i Ljava/lang/ClassNotFoundException; cnfe Lbluej/utility/JavaReflective; this Ljava/util/List; l Lbluej/debugger/gentype/GenTypeClass; superclass [Lbluej/debugger/gentype/GenTypeClass; interfaces Ljava/lang/Class<*>; ct Ljava/util/List<Lbluej/debugger/gentype/GenTypeClass;>; componentSuperTypes Ljava/util/Iterator<Lbluej/debugger/gentype/GenTypeClass;>; i Ljava/util/List<Lbluej/debugger/gentype/GenTypeClass;>; l java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getSuperclass Ljava/lang/reflect/Type; sc Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/Type; t bluej.utility.JavaUtils bluej.utility.JavaUtils15 genTypeFromType Ljava/lang/reflect/TypeVariable; tv Lbluej/debugger/gentype/GenTypeParameter; existingTpar Lbluej/debugger/gentype/GenTypeSolid; gtp Lbluej/debugger/gentype/GenTypeParameter; lbound Ljava/lang/reflect/WildcardType; wtype [Ljava/lang/reflect/Type; upperBounds [Ljava/lang/reflect/Type; lowerBounds I i Ljava/lang/reflect/ParameterizedType; pt Ljava/lang/Class; rawtype [Ljava/lang/reflect/Type; argtypes Ljava/util/List; arggentypes Lbluej/debugger/gentype/GenTypeClass; outer Ljava/lang/reflect/Type; t Ljava/util/Map; tvars Ljava/lang/reflect/GenericArrayType; gat Lbluej/debugger/gentype/JavaType; componentType Ljava/lang/reflect/TypeVariable<*>; tv Ljava/lang/Class<*>; rawtype Ljava/util/List<Lbluej/debugger/gentype/GenTypeParameter;>; arggentypes Ljava/util/Map<Ljava/lang/String;+Lbluej/debugger/gentype/GenTypeParameter;>; tvars java.lang.Object bluej.utility.JavaUtils genTypeFromClass Lbluej/debugger/gentype/JavaType; componentT Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.GenTypeSolid bluej.debugger.gentype.GenTypeClass GenTypeClass Lbluej/debugger/gentype/GenTypeClass; this Lbluej/debugger/gentype/Reflective; r java.lang.Object bluej.utility.JavaUtils getJavaUtils bluej.utility.JavaUtils bluej.utility.JavaUtils15 getInterfaces I i [Ljava/lang/reflect/Type; classes [Lbluej/debugger/gentype/GenTypeClass; gentypes Ljava/lang/TypeNotPresentException; tnpe Lbluej/utility/JavaUtils15; this Ljava/lang/Class; cl Ljava/lang/Class<*>; cl bluej.debugger.gentype.GenTypeSolid bluej.debugger.gentype.GenTypeClass getReflective Lbluej/debugger/gentype/GenTypeClass; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getName Lbluej/utility/JavaReflective; this bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getSuperTypesR Lbluej/utility/JavaReflective; componentSuperType Ljava/lang/Class; ct Lbluej/utility/JavaReflective; ctR Ljava/util/List; componentSuperTypes Ljava/util/Iterator; i I i Lbluej/utility/JavaReflective; this Ljava/util/List; l Ljava/lang/Class; superclass [Ljava/lang/Class; interfaces Ljava/lang/Class<*>; ct Ljava/util/List<Lbluej/debugger/gentype/Reflective;>; componentSuperTypes Ljava/util/Iterator<Lbluej/debugger/gentype/Reflective;>; i Ljava/util/List<Lbluej/debugger/gentype/Reflective;>; l Ljava/lang/Class<*>; superclass [Ljava/lang/Class<*>; interfaces bluej.debugger.gentype.Reflective bluej.utility.JavaReflective JavaReflective Lbluej/utility/JavaReflective; this Ljava/lang/Class; c Ljava/lang/Class<*>; c bluej.debugger.gentype.Reflective bluej.utility.JavaReflective getName Lbluej/utility/JavaReflective; this