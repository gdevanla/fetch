Specify libraries that are to be used in all projectsSometimes, you may want to make your own libraries generally available inthe same style as the Java standard libraries. For example, you may haveyour own package called "simpleIO" that you want to use. Then you may wantto be able to writeimport simpleIO.*;without the need to copy all the simpleIO classes into every project.This can be done in two ways.Using the dialogOpen the "Preferences" dialogue and select the "Libraries" tab. Then add thelocation where your classes are as a library path. Restart BlueJ.One small thing to look out for: if the classes are in a jar file, select the jar fileitself as the library. If your classes are in a named package directory structure(for example in a directory named "simpleIO"), choose the directory thatcontains simpleIO (not the simpleIO directory itself) as the library!The BlueJ Environment Reference Manual, Version 2.034Using userlibInside the lib directory of BlueJ installation there is a directory called “userlib”.Any class libraries added as .jar or .zip archives to the userlib directory areautomatically added to BlueJ’s list of system libraries (called the classpath), forall projects to use. The added libraries will be visible in the “Libraries” pane ofBlueJ’s Preferences dialog (Tools – Preferences – Libraries) and can be importedin projects as if it was a Java standard library.The classes made available by a library can also be use interactively with the“Use Library Class” function (See Create Objects from Available LibraryClasses) or the “Evaluate Expression”
